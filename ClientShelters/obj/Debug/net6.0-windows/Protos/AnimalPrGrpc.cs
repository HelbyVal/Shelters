// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/AnimalPr.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace SheltersServer {
  public static partial class Animaling
  {
    static readonly string __ServiceName = "AnimalPr.Animaling";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SheltersServer.AddingAnimal> __Marshaller_AnimalPr_AddingAnimal = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SheltersServer.AddingAnimal.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SheltersServer.IsCorrect> __Marshaller_AnimalPr_IsCorrect = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SheltersServer.IsCorrect.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SheltersServer.AnimalsFilts> __Marshaller_AnimalPr_AnimalsFilts = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SheltersServer.AnimalsFilts.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SheltersServer.AnimalsReply> __Marshaller_AnimalPr_AnimalsReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SheltersServer.AnimalsReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SheltersServer.UpdatingAnimal> __Marshaller_AnimalPr_UpdatingAnimal = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SheltersServer.UpdatingAnimal.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SheltersServer.ReleasingAnimal> __Marshaller_AnimalPr_ReleasingAnimal = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SheltersServer.ReleasingAnimal.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SheltersServer.AddingAnimal, global::SheltersServer.IsCorrect> __Method_AddAnimal = new grpc::Method<global::SheltersServer.AddingAnimal, global::SheltersServer.IsCorrect>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddAnimal",
        __Marshaller_AnimalPr_AddingAnimal,
        __Marshaller_AnimalPr_IsCorrect);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SheltersServer.AnimalsFilts, global::SheltersServer.AnimalsReply> __Method_GetAnimals = new grpc::Method<global::SheltersServer.AnimalsFilts, global::SheltersServer.AnimalsReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAnimals",
        __Marshaller_AnimalPr_AnimalsFilts,
        __Marshaller_AnimalPr_AnimalsReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SheltersServer.UpdatingAnimal, global::SheltersServer.IsCorrect> __Method_UpdateAnimal = new grpc::Method<global::SheltersServer.UpdatingAnimal, global::SheltersServer.IsCorrect>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAnimal",
        __Marshaller_AnimalPr_UpdatingAnimal,
        __Marshaller_AnimalPr_IsCorrect);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SheltersServer.ReleasingAnimal, global::SheltersServer.IsCorrect> __Method_ReleaseAnimal = new grpc::Method<global::SheltersServer.ReleasingAnimal, global::SheltersServer.IsCorrect>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReleaseAnimal",
        __Marshaller_AnimalPr_ReleasingAnimal,
        __Marshaller_AnimalPr_IsCorrect);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SheltersServer.AnimalPrReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Animaling</summary>
    public partial class AnimalingClient : grpc::ClientBase<AnimalingClient>
    {
      /// <summary>Creates a new client for Animaling</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AnimalingClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Animaling that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AnimalingClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AnimalingClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AnimalingClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SheltersServer.IsCorrect AddAnimal(global::SheltersServer.AddingAnimal request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAnimal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SheltersServer.IsCorrect AddAnimal(global::SheltersServer.AddingAnimal request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddAnimal, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SheltersServer.IsCorrect> AddAnimalAsync(global::SheltersServer.AddingAnimal request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAnimalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SheltersServer.IsCorrect> AddAnimalAsync(global::SheltersServer.AddingAnimal request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddAnimal, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SheltersServer.AnimalsReply GetAnimals(global::SheltersServer.AnimalsFilts request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAnimals(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SheltersServer.AnimalsReply GetAnimals(global::SheltersServer.AnimalsFilts request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAnimals, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SheltersServer.AnimalsReply> GetAnimalsAsync(global::SheltersServer.AnimalsFilts request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAnimalsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SheltersServer.AnimalsReply> GetAnimalsAsync(global::SheltersServer.AnimalsFilts request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAnimals, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SheltersServer.IsCorrect UpdateAnimal(global::SheltersServer.UpdatingAnimal request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAnimal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SheltersServer.IsCorrect UpdateAnimal(global::SheltersServer.UpdatingAnimal request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAnimal, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SheltersServer.IsCorrect> UpdateAnimalAsync(global::SheltersServer.UpdatingAnimal request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAnimalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SheltersServer.IsCorrect> UpdateAnimalAsync(global::SheltersServer.UpdatingAnimal request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAnimal, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SheltersServer.IsCorrect ReleaseAnimal(global::SheltersServer.ReleasingAnimal request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReleaseAnimal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SheltersServer.IsCorrect ReleaseAnimal(global::SheltersServer.ReleasingAnimal request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReleaseAnimal, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SheltersServer.IsCorrect> ReleaseAnimalAsync(global::SheltersServer.ReleasingAnimal request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReleaseAnimalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SheltersServer.IsCorrect> ReleaseAnimalAsync(global::SheltersServer.ReleasingAnimal request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReleaseAnimal, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AnimalingClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AnimalingClient(configuration);
      }
    }

  }
}
#endregion
